(()=>{"use strict";var t={426:(t,e,n)=>{n.d(e,{Z:()=>d});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([t.id,":root {\n    --primary:#1f2937;\n    --secondary:#C9A959;\n    --myGrey:#CFCECA;\n\n}\n\n.icon {\n    width: 32px;\n    height: 32px;\n}\n.icon:hover {\n    cursor: pointer;\n    transform: scale(1.075);\n}\n\n\nbody {\n    box-sizing: border-box;\n    height: 100vh;\n    margin: 0;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 240px 1fr;\n}\n\n.sidebar {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--primary);\n    color: white;\n    padding-left: 24px;\n    gap: 12px;\n}\n\n.add-button {\n    border-style: none;\n    padding: 12px;\n    background-color: var(--secondary);\n    width: 100px;\n    cursor: pointer;\n\n}\n.add-button:hover {\n   transform: scale(1.08);\n}\n\n.project-list {\n    font-size: 18px;\n}\n\n.card-container {\n    padding: 24px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(240px, max-content));\n    gap: 12px;\n}\n\n.todo-card {\n    color: white;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    border-radius: 12px;\n    gap: 8px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border-style: solid;\n}\n.project-title {\n    padding: 24px;\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.project:hover {\n    color: var(--secondary);\n    cursor: pointer;\n    transform: scale(1.05);\n}\n\n.project-header {\n    display: flex;\n    background-color: #C9A959;\n}\n.project-title {\n    margin-right: auto;\n}\n\n.project-form,\n#todo-form {\n    display: flex;\n    width: 300px;\n    background-color:var(--primary);\n    color: white;\n    flex-direction: column;\n    gap: 12px;\n    padding: 32px;\n    border-radius: 16px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    box-shadow: 6px 6px 12px 1px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;;AAEpB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,eAAe;IACf,uBAAuB;AAC3B;;;AAGA;IACI,sBAAsB;IACtB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,gCAAgC;IAChC,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,kCAAkC;IAClC,YAAY;IACZ,eAAe;;AAEnB;AACA;GACG,sBAAsB;AACzB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,mEAAmE;IACnE,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,oCAAoC;IACpC,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;AACA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,aAAa;IACb,YAAY;IACZ,+BAA+B;IAC/B,YAAY;IACZ,sBAAsB;IACtB,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,+BAA+B;IAC/B,4BAA4B;AAChC",sourcesContent:[":root {\n    --primary:#1f2937;\n    --secondary:#C9A959;\n    --myGrey:#CFCECA;\n\n}\n\n.icon {\n    width: 32px;\n    height: 32px;\n}\n.icon:hover {\n    cursor: pointer;\n    transform: scale(1.075);\n}\n\n\nbody {\n    box-sizing: border-box;\n    height: 100vh;\n    margin: 0;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 240px 1fr;\n}\n\n.sidebar {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--primary);\n    color: white;\n    padding-left: 24px;\n    gap: 12px;\n}\n\n.add-button {\n    border-style: none;\n    padding: 12px;\n    background-color: var(--secondary);\n    width: 100px;\n    cursor: pointer;\n\n}\n.add-button:hover {\n   transform: scale(1.08);\n}\n\n.project-list {\n    font-size: 18px;\n}\n\n.card-container {\n    padding: 24px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(240px, max-content));\n    gap: 12px;\n}\n\n.todo-card {\n    color: white;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    border-radius: 12px;\n    gap: 8px;\n    background-color: rgba(0, 0, 0, 0.6);\n    border-style: solid;\n}\n.project-title {\n    padding: 24px;\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.project:hover {\n    color: var(--secondary);\n    cursor: pointer;\n    transform: scale(1.05);\n}\n\n.project-header {\n    display: flex;\n    background-color: #C9A959;\n}\n.project-title {\n    margin-right: auto;\n}\n\n.project-form,\n#todo-form {\n    display: flex;\n    width: 300px;\n    background-color:var(--primary);\n    color: white;\n    flex-direction: column;\n    gap: 12px;\n    padding: 32px;\n    border-radius: 16px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    box-shadow: 6px 6px 12px 1px;\n}\n"],sourceRoot:""}]);const d=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var l=0;l<t.length;l++){var p=[].concat(t[l]);o&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var a={},i=[],d=0;d<t.length;d++){var c=t[d],l=o.base?c[0]+o.base:c[0],p=a[l]||0,s="".concat(l," ").concat(p);a[l]=p+1;var A=n(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var a=o(t=t||[],r=r||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var d=n(a[i]);e[d].references--}for(var c=o(t,r),l=0;l<a.length;l++){var p=n(a[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=c}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return t[o](a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!t;)t=o[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{function t(t){return{name:t,todoArray:[]}}function e(t,e,n,o){return{title:t,description:e,dueDate:n,priority:o,checkBox:!1}}const o=n.p+"995e12dd39ac55d7358b.svg",r=n.p+"0b21fd5021d385750ac3.svg",a={displayProjectList:function(t,e){t.innerHTML="";for(let n=0;n<e.length;n++){let o=document.createElement("div");o.classList.add("project"),o.setAttribute("data-key",n),o.textContent=e[n].name,t.appendChild(o)}},showProjectModal:function(t){let e=document.createElement("div");e.classList.add("project-form"),t.appendChild(e);let n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","project-input");let o=document.createElement("label");o.setAttribute("for","project-input"),o.textContent="Project Name";let r=document.createElement("button");r.setAttribute("id","submit-button"),r.textContent="Add Project",e.appendChild(o),e.appendChild(n),e.appendChild(r)},showTodoItemModal:function(t){let e=document.createElement("div");e.setAttribute("id","todo-form"),t.appendChild(e);let n=document.createElement("label");n.setAttribute("for","todo-title"),n.textContent="Title";let o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","todo-title");let r=document.createElement("label");r.setAttribute("for","todo-description"),r.textContent="Description";let a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","todo-description");let i=document.createElement("label");i.setAttribute("for","todo-date"),i.textContent="Due Date";let d=document.createElement("input");d.setAttribute("type","date"),d.setAttribute("id","todo-date"),d.setAttribute("value","2024-01-01");let c=document.createElement("label");c.setAttribute("for","todo-priority"),c.textContent="Priority";let l=document.createElement("select");l.setAttribute("id","todo-priority");let p=document.createElement("option");l.appendChild(p),p.textContent="Low";let s=document.createElement("option");s.textContent="High",l.appendChild(s);let A=document.createElement("button");A.setAttribute("id","submit-button"),A.textContent="Add Todo",e.appendChild(n),e.appendChild(o),e.appendChild(r),e.appendChild(a),e.appendChild(i),e.appendChild(d),e.appendChild(c),e.appendChild(l),e.appendChild(A)},hidePopup:function(){let t=document.querySelector(".content");t.removeChild(t.lastChild)},updateMainContainer:function(t,e){!function(t){t.innerHTML=""}(t),function(t,e){let n=document.createElement("div");n.classList.add("project-header"),t.appendChild(n);let o=document.createElement("div");o.classList.add("project-title"),o.textContent=e.name;let r=document.createElement("button");r.classList.add("delete-button"),r.textContent="Delete Project";let a=document.createElement("button");a.setAttribute("id","add-todo-button"),a.textContent="Add To-do List",n.appendChild(o),"General"!==e.name&&n.appendChild(r),n.appendChild(a)}(t,e),function(t,e){let n=document.createElement("div");n.classList.add("card-container"),t.appendChild(n);let a=0;e.todoArray.forEach((t=>{let e=document.createElement("div");e.classList.add("todo-card"),e.setAttribute("data-key",a),n.appendChild(e),function(t,e){let n=document.createElement("div");n.textContent=e.title;let a=document.createElement("div");a.textContent=e.description;let i=document.createElement("div");i.textContent=e.dueDate;let d=document.createElement("div");d.textContent=e.priority;let c=document.createElement("div"),l=document.createElement("img");l.classList.add("icon"),l.setAttribute("id","todo-check"),l.setAttribute("data-key",t.dataset.key),l.src=r;let p=document.createElement("img");p.classList.add("icon"),p.setAttribute("id","todo-delete"),p.setAttribute("data-key",t.dataset.key),p.src=o,c.appendChild(l),c.appendChild(p),t.appendChild(n),t.appendChild(a),t.appendChild(i),t.appendChild(d),t.appendChild(c)}(e,t),a++,console.log("element priority: "+t.priority),"High"===t.priority?e.style.borderColor="red":"Low"===t.priority&&(e.style.borderColor="orange"),"true"===t.checkBox&&(e.style.borderColor="green")}))}(t,e),console.log("maincontainer updated")}};var i=n(379),d=n.n(i),c=n(795),l=n.n(c),p=n(569),s=n.n(p),A=n(565),u=n.n(A),m=n(216),C=n.n(m),f=n(589),h=n.n(f),b=n(426),g={};g.styleTagTransform=h(),g.setAttributes=u(),g.insert=s().bind(null,"head"),g.domAPI=l(),g.insertStyleElement=C(),d()(b.Z,g),b.Z&&b.Z.locals&&b.Z.locals;const y=document.querySelector(".content"),x=document.querySelector(".project-list"),v=document.querySelector(".main-container"),I=document.getElementById("project-button");let B=[],E=0;console.log("start:"),B[0]=t("General"),B[1]=t("Loki"),B[2]=t("Freya"),B[0].todoArray[0]=e("Homework","Do the coding assignment from TOP","15.07.2023","High"),B[0].todoArray[1]=e("Project","Implement xy features","20.11.2023","Low"),B[1].todoArray[0]=e("Reading","Read article xzy","15.11.2024","Low"),B[2].todoArray[0]=e("Airport pickup","Pick up Odin from the airport","11.08.2023","High"),a.displayProjectList(x,B),a.updateMainContainer(v,B[0]),window.addEventListener("click",(function(t){if(t.target.matches(".project")){let e=parseInt(t.target.dataset.key);a.updateMainContainer(v,B[e]),console.log("xyz: "+B[E]),E=e,console.log("current project index: "+E)}})),I.addEventListener("click",(function(e){console.log("new project clicked"),a.showProjectModal(y),document.getElementById("submit-button").addEventListener("click",(function(e){let n=document.getElementById("project-input");""===n.value?function(t){let e=document.querySelector(".project-form"),n=document.createElement("div");n.setAttribute("style","font-size: 0.8em; color:#ff0000;"),n.textContent="Please enter Project Name",e.appendChild(n)}():(B.push(t(n.value)),console.log(B),E=B.length-1,a.displayProjectList(x,B),a.updateMainContainer(v,B[E]),a.hidePopup(),console.log("current project index: "+E))}))})),v.addEventListener("click",(function(t){t.target.matches(".delete-button")&&E>0&&(B.splice(E,1),console.log(B),E=0,a.displayProjectList(x,B),a.updateMainContainer(v,B[E]))})),v.addEventListener("click",(function(t){t.target.matches("#add-todo-button")&&(a.showTodoItemModal(y),document.getElementById("submit-button").addEventListener("click",(function(t){!function(){let t=e(document.getElementById("todo-title").value,document.getElementById("todo-description").value,document.getElementById("todo-date").value,document.getElementById("todo-priority").value);B[E].todoArray.push(t)}(),a.hidePopup(),a.updateMainContainer(v,B[E])})))})),v.addEventListener("click",(function(t){if(t.target.matches("#todo-delete")){let e=parseInt(t.target.dataset.key);B[E].todoArray.splice(e,1),a.updateMainContainer(v,B[E])}else if(t.target.matches("#todo-check")){let e=parseInt(t.target.dataset.key);"false"===B[E].todoArray[e].checkBox.toString()?B[E].todoArray[e].checkBox="true":B[E].todoArray[e].checkBox="false",a.updateMainContainer(v,B[E])}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,