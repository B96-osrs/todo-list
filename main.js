(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,":root {\n    --primary:#1f2937;\n    --secondary:#C9A959;\n    --myGrey:#CFCECA;\n\n}\n\n\nbody {\n    box-sizing: border-box;\n    height: 100vh;\n    margin: 0;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 240px 1fr;\n}\n\n.sidebar {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--primary);\n    color: white;\n    padding-left: 24px;\n    gap: 12px;\n}\n\n.add-button {\n    border-style: none;\n    padding: 12px;\n    background-color: var(--secondary);\n    width: 100px;\n    cursor: pointer;\n\n}\n.add-button:hover {\n   transform: scale(1.08);\n}\n\n.project-list {\n    font-size: 18px;\n}\n\n.card-container {\n    padding: 24px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit,minmax(240px,1fr));\n    gap: 12px;\n}\n\n.todo-card {\n    color: white;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    border-radius: 12px;\n    gap: 8px;\n    background-color: rgba(0, 0, 0, 0.6);\n}\n.project-title {\n    padding: 24px;\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.project:hover {\n    color: var(--secondary);\n    cursor: pointer;\n    transform: scale(1.05);\n}\n\n.project-header {\n    display: flex;\n}\n\n#delete-button {\n    margin-left: auto;\n}\n\n.project-form {\n    display: flex;\n    width: 300px;\n    background-color:var(--primary);\n    color: white;\n    flex-direction: column;\n    gap: 12px;\n    padding: 32px;\n    border-radius: 16px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    box-shadow: 6px 6px 12px 1px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;;AAEpB;;;AAGA;IACI,sBAAsB;IACtB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,gCAAgC;IAChC,YAAY;IACZ,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,kCAAkC;IAClC,YAAY;IACZ,eAAe;;AAEnB;AACA;GACG,sBAAsB;AACzB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,yDAAyD;IACzD,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,oCAAoC;AACxC;AACA;IACI,aAAa;IACb,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,uBAAuB;IACvB,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,+BAA+B;IAC/B,YAAY;IACZ,sBAAsB;IACtB,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,+BAA+B;IAC/B,4BAA4B;AAChC",sourcesContent:[":root {\n    --primary:#1f2937;\n    --secondary:#C9A959;\n    --myGrey:#CFCECA;\n\n}\n\n\nbody {\n    box-sizing: border-box;\n    height: 100vh;\n    margin: 0;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 240px 1fr;\n}\n\n.sidebar {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--primary);\n    color: white;\n    padding-left: 24px;\n    gap: 12px;\n}\n\n.add-button {\n    border-style: none;\n    padding: 12px;\n    background-color: var(--secondary);\n    width: 100px;\n    cursor: pointer;\n\n}\n.add-button:hover {\n   transform: scale(1.08);\n}\n\n.project-list {\n    font-size: 18px;\n}\n\n.card-container {\n    padding: 24px;\n    display: grid;\n    grid-template-columns: repeat(auto-fit,minmax(240px,1fr));\n    gap: 12px;\n}\n\n.todo-card {\n    color: white;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    border-radius: 12px;\n    gap: 8px;\n    background-color: rgba(0, 0, 0, 0.6);\n}\n.project-title {\n    padding: 24px;\n    font-size: 24px;\n    font-weight: bold;\n}\n\n.project:hover {\n    color: var(--secondary);\n    cursor: pointer;\n    transform: scale(1.05);\n}\n\n.project-header {\n    display: flex;\n}\n\n#delete-button {\n    margin-left: auto;\n}\n\n.project-form {\n    display: flex;\n    width: 300px;\n    background-color:var(--primary);\n    color: white;\n    flex-direction: column;\n    gap: 12px;\n    padding: 32px;\n    border-radius: 16px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    box-shadow: 6px 6px 12px 1px;\n}\n"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var p=[].concat(n[A]);o&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],d=0;d<n.length;d++){var c=n[d],A=o.base?c[0]+o.base:c[0],p=a[A]||0,l="".concat(A," ").concat(p);a[A]=p+1;var s=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==s)e[s].references++,e[s].updater(u);else{var f=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var d=t(a[i]);e[d].references--}for(var c=o(n,r),A=0;A<a.length;A++){var p=t(a[A]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(n){return{name:n,todoArray:[]}}function e(n,e,t,o){return{title:n,description:e,dueDate:t,priority:o,checkBox:!1}}const o=function(n,e){n.innerHTML="";for(let t=0;t<e.length;t++){let o=document.createElement("div");o.classList.add("project"),o.setAttribute("data-key",t),o.textContent=e[t].name,n.appendChild(o)}},r=function(n,e){let t=document.createElement("div");t.classList.add("card-container"),n.appendChild(t),e.todoArray.forEach((n=>{let e=document.createElement("div");e.classList.add("todo-card"),t.appendChild(e),function(n,e){let t=document.createElement("div");t.textContent=e.title;let o=document.createElement("div");o.textContent=e.description;let r=document.createElement("div");r.textContent=e.dueDate;let a=document.createElement("div");a.textContent=e.priority;let i=document.createElement("div");i.textContent=e.checkBox,n.appendChild(t),n.appendChild(o),n.appendChild(r),n.appendChild(a),n.appendChild(i)}(e,n)}))},a=function(n,e){let t=document.createElement("div");t.classList.add("project-header"),n.appendChild(t);let o=document.createElement("div");o.classList.add("project-title"),o.textContent=e.name;let r=document.createElement("button");r.setAttribute("id","delete-button"),r.textContent="Delete Project";let a=document.createElement("button");a.setAttribute("id","add-todo-button"),a.textContent="Add To-do List",t.appendChild(o),t.appendChild(r),t.appendChild(a)},i=function(n){n.innerHTML=""},d=function(n){let e=document.createElement("div");e.classList.add("project-form"),n.appendChild(e);let t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("id","project-input");let o=document.createElement("label");o.setAttribute("for","project-input"),o.textContent="Project Name";let r=document.createElement("button");r.setAttribute("id","submit-button"),r.textContent="Add Project",e.appendChild(o),e.appendChild(t),e.appendChild(r)},c=function(){let n=document.querySelector(".content");n.removeChild(n.lastChild)};var A=t(379),p=t.n(A),l=t(795),s=t.n(l),u=t(569),f=t.n(u),m=t(565),C=t.n(m),h=t(216),x=t.n(h),g=t(589),y=t.n(g),b=t(426),v={};v.styleTagTransform=y(),v.setAttributes=C(),v.insert=f().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=x(),p()(b.Z,v),b.Z&&b.Z.locals&&b.Z.locals;const I=document.querySelector(".content"),B=document.querySelector(".project-list"),E=document.querySelector(".main-container"),k=document.getElementById("project-button");let j=[];console.log("start:"),j[0]=n("Odin"),j[1]=n("Loki"),j[2]=n("Freya"),j[0].todoArray[0]=e("Homework","Do the coding assignment from TOP","15.07.2023","high"),j[0].todoArray[1]=e("Reading","Read article xzy","15.11.2024","low"),j[0].todoArray[2]=e("Airport pickup","Pick up Odin from the airport","11.08.2023","high"),j[1].todoArray[0]=e("zzz","zzzzzzzz","16.07.2023","high"),j[1].todoArray[1]=e("Reading","Read article xzy","15.11.2024","low"),j[1].todoArray[2]=e("Airport pickup","Pick up Odin from the airport","11.08.2023","high"),j[2].todoArray[0]=e("uuuuuu","uuuuuuuuuu","17.07.2023","low"),j[2].todoArray[1]=e("Reading","Read article xzy","15.11.2024","low"),j[2].todoArray[2]=e("Airport pickup","Pick up Odin from the airport","11.08.2023","high"),o(B,j),a(E,j[0]),r(E,j[0]),j[0].todoArray.forEach((n=>{console.log(n)})),window.addEventListener("click",(function(n){if(n.target.matches(".project")){let e=parseInt(n.target.dataset.key);i(E),a(E,j[e]),r(E,j[e])}})),k.addEventListener("click",(function(e){console.log("new project clicked"),d(I),document.getElementById("submit-button").addEventListener("click",(function(e){let t=document.getElementById("project-input");""===t.value?console.log("empty field"):(j.push(n(t.value)),console.log(j),o(B,j),c())}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,